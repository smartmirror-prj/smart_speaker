// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Cloud Storage JSON API (storage/v1)
// Description:
//   Stores and retrieves potentially large, immutable data objects.
// Classes:
//   ComposeRequest
// Documentation:
//   https://developers.google.com/storage/docs/json_api/

#include "google/storage_api/compose_request.h"
#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"

#include "google/storage_api/object.h"


#include <string>
#include "googleapis/strings/strcat.h"

namespace google_storage_api {
using namespace googleapis;




// Object factory method (static).
ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjectsObjectPreconditions* ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjectsObjectPreconditions::New() {
  return new client::JsonCppCapsule<ComposeRequestSourceObjectsObjectPreconditions>;
}

// Standard immutable constructor.
ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjectsObjectPreconditions::ComposeRequestSourceObjectsObjectPreconditions(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjectsObjectPreconditions::ComposeRequestSourceObjectsObjectPreconditions(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjectsObjectPreconditions::~ComposeRequestSourceObjectsObjectPreconditions() {
}

// Properties.
// Object factory method (static).
ComposeRequest::ComposeRequestSourceObjects* ComposeRequest::ComposeRequestSourceObjects::New() {
  return new client::JsonCppCapsule<ComposeRequestSourceObjects>;
}

// Standard immutable constructor.
ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjects(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
ComposeRequest::ComposeRequestSourceObjects::ComposeRequestSourceObjects(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
ComposeRequest::ComposeRequestSourceObjects::~ComposeRequestSourceObjects() {
}

// Properties.
// Object factory method (static).
ComposeRequest* ComposeRequest::New() {
  return new client::JsonCppCapsule<ComposeRequest>;
}

// Standard immutable constructor.
ComposeRequest::ComposeRequest(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
ComposeRequest::ComposeRequest(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
ComposeRequest::~ComposeRequest() {
}

// Properties.

const Object ComposeRequest::get_destination() const {
   const Json::Value& storage = Storage("destination");
   return client::JsonValueToCppValueHelper<Object >(storage);
}

Object ComposeRequest::mutable_destination() {
  Json::Value* storage = MutableStorage("destination");
  return client::JsonValueToMutableCppValueHelper<Object >(storage);
}
}  // namespace google_storage_api
